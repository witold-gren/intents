language: de
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/binary_sensor/
      # Battery
      - sentences:
          - "ist <name>[ <batterie>][ <area>] {bs_battery_states:state}"
          - "ist[ <ladestand>] <batterie> <von_dem> <name>[ <area>] {bs_battery_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: battery
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "(ist|sind)[ <irgend>] <batterie>[ <area>] {bs_battery_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "sind <alle> <batterie>[ <area>] {bs_battery_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "<welche> <batterie>[ <area>] (ist|sind) {bs_battery_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "<wieviel> <batterie>[ <area>] (ist|sind) {bs_battery_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: battery

      # Battery charging
      - sentences:
          - "wird <name>[ <batterie>][ <area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state} <name>[ <batterie>][ <area>][ auf]"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: battery_charging
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "(wird|werden)[ <irgend>] <batterie>[ <area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state}[ <irgend>] <batterie>[ <area>][ auf]"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "werden <alle> <batterie>[ <area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state} <alle> <batterie>[ <area>][ auf]"
        response: alle
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<welche> <batterie>[ <area>][ (wird|werden)] {bs_battery_charging_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<wieviel> <batterie>[ <area>][ werden] {bs_battery_charging_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: battery_charging

      # Carbon monoxide
      - sentences:
          - "(ist|wurde) <name>[ <area>] {bs_carbon_monoxide_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: carbon_monoxide
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(ist|sind|wurde[n])[ <irgend>] <co_sensor>[ <area>] {bs_carbon_monoxide_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(gibt es|ist)[ <irgend>] <co> <area>"
          - "(wird|wurde)[ <irgend>] <co> <area> {bs_carbon_monoxide_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide
          state: "on"

      - sentences:
          - "(sind|wurden) <alle> <co_sensor>[ <area>] {bs_carbon_monoxide_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "<welche> <co_sensor> (ist|sind|wurde[n])[ <area>] {bs_carbon_monoxide_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "<wieviel> <co_sensor> (sind|wurden)[ <area>] {bs_carbon_monoxide_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      # Cold
      - sentences:
          - "ist <name>[ <area>] {bs_cold_states:state}"
          - "ist <area> <name> {bs_cold_states:state}"
          - "ist <name> {bs_cold_states:state} <area>"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: cold
        slots:
          domain: binary_sensor
          device_class: cold

      - sentences:
          - "(ist|sind)[ <irgend>] <ding>[ <area>] kalt"
          - "(ist|sind)[ <irgend>] <ding> kalt <area>"
          - "(ist|sind) <area>[ <irgend>] <ding> kalt"
          - "ist <etwas>[ <area>] kalt"
          - "ist <etwas> kalt <area>"
          - "ist <area> <etwas> kalt"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "sind <alle> <ding>[ <area>] kalt"
          - "sind <alle> <ding> kalt <area>"
          - "sind <area> <alle> <ding> kalt"
        response: alle
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "<welche> <ding> (ist|sind)[ <area>] kalt"
          - "<welche> <ding> (ist|sind) kalt <area>"
          - "<welche> <ding> <area> (ist|sind) kalt"
        response: welches
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "<wieviel> <ding> sind[ <area>] kalt"
          - "<wieviel> <ding> sind kalt <area>"
          - "<wieviel> <ding> <area> sind kalt"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      # Connectivity
      - sentences:
          - "ist <name>[ <area>] {bs_connectivity_states:state}"
          - "ist <area> <name> {bs_connectivity_states:state}"
          - "ist <name> {bs_connectivity_states:state} <area>"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: connectivity
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "(ist|sind) ([<irgend>] <ding>|<etwas>)[ <area>] {bs_connectivity_states:state}"
          - "(ist|sind) ([<irgend>] <ding>|<etwas>) {bs_connectivity_states:state} <area>"
          - "(ist|sind) <area> ([<irgend>] <ding>|<etwas>) {bs_connectivity_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "sind <alle> <ding>[ <area>] {bs_connectivity_states:state}"
          - "sind <alle> <ding> {bs_connectivity_states:state} <area>"
          - "sind <area> <alle> <ding> {bs_connectivity_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "<welche> <ding>[ <area>] (ist|sind) {bs_connectivity_states:state}"
          - "<welche> <ding> (ist|sind) <area> {bs_connectivity_states:state}"
          - "<welche> <ding> (ist|sind) {bs_connectivity_states:state} <area>"
        response: welches
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "<wieviel> <ding>[ <area>] sind {bs_connectivity_states:state}"
          - "<wieviel> <ding> sind <area> {bs_connectivity_states:state}"
          - "<wieviel> <ding> sind {bs_connectivity_states:state} <area>"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: connectivity

      # Door
      - sentences:
          - "(ist|steht) <name>[ <area>] {bs_door_states:state}"
          - "(ist|steht) <name> {bs_door_states:state} <area>"
          - "(ist|steht) <area> <name> {bs_door_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: door
        slots:
          domain: binary_sensor
          device_class: door

      # Garage door
      - sentences:
          - "(ist|steht) <name>[ <area>] {bs_garage_door_states:state}"
          - "(ist|steht) <name> {bs_garage_door_states:state} <area>"
          - "(ist|steht) <area> <name> {bs_garage_door_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: garage_door
        slots:
          domain: binary_sensor
          device_class: garage_door

      # Window
      - sentences:
          - "(ist|steht) <name>[ <area>] {bs_window_states:state}"
          - "(ist|steht) <name> {bs_window_states:state} <area>"
          - "(ist|steht) <area> <name> {bs_window_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: window
        slots:
          domain: binary_sensor
          device_class: window

      # Gas
      - sentences:
          - "(ist|wurde) <name>[ <area>] {bs_gas_states:state}"
          - "(ist|wurde) <name> {bs_gas_states:state} <area>"
          - "(ist|wurde) <area> <name> {bs_gas_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: gas
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "(ist|sind|wurde[n])[ <irgend>] <gas_sensor>[ <area>] {bs_gas_states:state}"
          - "(ist|sind|wurde[n])[ <irgend>] <gas_sensor> {bs_gas_states:state} <area>"
          - "(ist|sind|wurde[n]) <area>[ <irgend>] <gas_sensor> {bs_gas_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "(gibt es|ist[ da])[ <irgend>] Gas <area>"
          - "(wird|wurde)[ <irgend>] Gas <area> {bs_gas_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: gas
          state: "on"

      - sentences:
          - "(sind|wurden) <alle> <gas_sensor>[ <area>] {bs_gas_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "<welche> <gas_sensor> (ist|sind|wurde[n])[ <area>] {bs_gas_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "<wieviel> <gas_sensor> (sind|wurden)[ <area>] {bs_gas_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: gas

      # Heat
      - sentences:
          - "ist <name>[ <area>] {bs_heat_states:state}"
          - "ist <area> <name> {bs_heat_states:state}"
          - "ist <name> {bs_heat_states:state} <area>"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: heat
        slots:
          domain: binary_sensor
          device_class: heat

      - sentences:
          - "(ist|sind)[ <irgend>] <ding>[ <area>] hei(ß|ss)"
          - "(ist|sind)[ <irgend>] <ding> hei(ß|ss) <area>"
          - "(ist|sind) <area>[ <irgend>] <ding> hei(ß|ss)"
          - "ist <etwas>[ <area>] hei(ß|ss)"
          - "ist <etwas> hei(ß|ss) <area>"
          - "ist <area> <etwas> hei(ß|ss)"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "sind <alle> <ding>[ <area>] hei(ß|ss)"
          - "sind <alle> <ding> hei(ß|ss) <area>"
          - "sind <area> <alle> <ding> hei(ß|ss)"
        response: alle
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "<welche> <ding> (ist|sind)[ <area>] hei(ß|ss)"
          - "<welche> <ding> (ist|sind) hei(ß|ss) <area>"
          - "<welche> <ding> <area> (ist|sind) hei(ß|ss)"
        response: welches
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "<wieviel> <ding> sind[ <area>] hei(ß|ss)"
          - "<wieviel> <ding> sind hei(ß|ss) <area>"
          - "<wieviel> <ding> <area> sind hei(ß|ss)"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      # Light
      - sentences:
          - "<ist_wurde> <name>[ <area>] {bs_light_states:state}"
          - "<ist_wurde> <name> {bs_light_states:state} <area>"
          - "<ist_wurde> <area> <name> {bs_light_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: light
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "(<ist_wurde>|<sind_wurden>)[ <irgend>] Licht[er][ <area>] {bs_light_states:state}"
          - "(<ist_wurde>|<sind_wurden>)[ <irgend>] Licht[er] {bs_light_states:state} <area>"
          - "(<ist_wurde>|<sind_wurden>) <area>[ <irgend>] Licht[er] {bs_light_states:state}"
          - "(<ist_wurde>|<sind_wurden>)[ <irgend>] <area> Licht[er] {bs_light_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<sind_wurden> <alle> Licht[er][ <area>] {bs_light_states:state}"
          - "<sind_wurden> <alle> Licht[er] {bs_light_states:state} <area>"
          - "<sind_wurden> <area> <alle> Licht[er] {bs_light_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<welche> Licht[er] (<ist_wurde>|<sind_wurden>)[ <area>] {bs_light_states:state}"
          - "<welche> Licht[er] (<ist_wurde>|<sind_wurden>) {bs_light_states:state} <area>"
          - "<welche> Licht[er] <area> (<ist_wurde>|<sind_wurden>) {bs_light_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<wieviel> Licht[er] (<ist_wurde>|<sind_wurden>)[ <area>] {bs_light_states:state}"
          - "<wieviel> Licht[er] (<ist_wurde>|<sind_wurden>) {bs_light_states:state} <area>"
          - "<wieviel> Licht[er] <area> (<ist_wurde>|<sind_wurden>) {bs_light_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: light

      # Problem
      - sentences:
          - "Gibt es[ <irgend>] Problem[e] mit <name>[ <area>]"
          - "Hat der <name>[ <area>][ <irgend>] Problem[e]"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: problem
        slots:
          domain: binary_sensor
          device_class: problem
          state: "on"

      # Safety
      - sentences:
          - "(ist|sind) <name> {bs_safety_states:state}[ <area>]"
          - "(ist|sind) <name> <area> {bs_safety_states:state}"
          - "(ist|sind) <area> <name> {bs_safety_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: safety
        slots:
          domain: binary_sensor
          device_class: safety
