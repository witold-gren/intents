language: it
responses:
  errors:
    # Errori generici
    no_intent: "Mi dispiace, non ho capito"
    handle_error: "Si è verificato un errore inatteso durante l'elaborazione"

    # Errori per quando un utente non ha effettuato l'accesso
    no_area: "Non conosco nessuna area chiamata {{ area }}"
    no_domain: "Mi dispiace, non conosco nessun dispositivo appartenente al dominio {{ domain }}"
    no_domain_in_area: "Mi dispiace, nell'area {{ area }} non conosco nessun dispositivo appartenente al dominio {{ domain }}"
    no_device_class: "Mi dispiace, non conosco nessun dispositivo appartenente alla classe {{ device_class }}"
    no_device_class_in_area: "Mi dispiace, nell'area {{ area }} non conosco nessun dispositivo appartenente alla classe {{ device_class }}"
    no_entity: "Mi dispiace, non sconosco nessun dispositivo chiamato {{ entity }}"
    no_entity_in_area: "Mi dispiace, nell'area {{ area }} non sconosco nessun dispositivo chiamato {{ entity }}"

    # Errori per quando un utente ha effettuato l'accesso ed è quindi possibile dare più informazioni
    no_entity_exposed: "Mi dispiace, il dispositivo {{ entity }} non è stato esposto"
    no_entity_in_area_exposed: "Mi dispiace, il dispositivo {{ entity }} nell'area {{ area }} non è stato esposto"
    no_domain_exposed: "Mi dispiace, il dominio {{ domain }} non è stato esposto"
    no_domain_in_area_exposed: "Mi dispiace, nell'area {{ area }} il dominio {{ domain }} non è stato esposto"
    no_device_class_exposed: "Mi dispiace, nessun dispositivo appartenente alla classe {{ device_class }} è stato esposto"
    no_device_class_in_area_exposed: "Mi dispiace, nell'area {{ area }} nessun dispositivo appartenente alla classe {{ device_class }} è stato esposto"

    # Errori quando più di un dispositivo esposto ha lo stesso nome
    duplicate_entities: "Mi dispiace, esistono più dispositivi chiamati {{ entity }}"
    duplicate_entities_in_area: "Mi dispiace, nell'area {{ area }} esistono più dispositivi chiamati {{ entity }}"

lists:
  color:
    values:
      - in: "bianco"
        out: "white"
      - in: "nero"
        out: "black"
      - in: "rosso"
        out: "red"
      - in: "arancione"
        out: "orange"
      - in: "giallo"
        out: "yellow"
      - in: "verde"
        out: "green"
      - in: "blu"
        out: "blue"
      - in: "viola"
        out: "purple"
      - in: "marrone"
        out: "brown"
      - in: "rosa"
        out: "pink"
      - in: "turchese"
        out: "turquoise"
  brightness:
    range:
      type: "percentage"
      from: 0
      to: 100
  brightness_level:
    values:
      - in: "massimo"
        out: 100
      - in: "minimo"
        out: 1
      - in: "metà"
        out: 50
  temperature:
    range:
      type: "temperature"
      from: 0
      to: 100
  temperature_unit:
    values:
      - "(celsius | centigradi)"
      - in: "c"
        out: "celsius"
      - "fahrenheit"
      - in: "f"
        out: "fahrenheit"
  on_off_states:
    values:
      - in: "(acces|attiv)(o|i|a|e)"
        out: "on"
      - in: "(spent|disattiv[at])(o|i|a|e)"
        out: "off"
  on_off_domains:
    values:
      - in: "luc(e|i)"
        out: light
      - in: "(ventol(a|e)|ventilator(e|i)|ventilazione|climatizzator(e|i)|condizionator(e|i))"
        out: fan
      - in: "(interruttor(e|i)|pres(a|e))"
        out: switch
  cover_states:
    values:
      - in: "apert(a|o|e|i)"
        out: "open"
      - in: "chius(a|o|e|i)"
        out: "closed"
      - in: "in apertura"
        out: "opening"
      - in: "in chiusura"
        out: "closing"
  cover_classes:
    values:
      - in: "tend(a|e) da sole"
        out: awning
      - in: "(persian(a|e)|oscurant(e|i))"
        out: blind
      - in: "tend(a|e)"
        out: curtain
      - in: "port(a|e)"
        out: door
      - in: <garage>
        out: garage
      - in: "cancell(o|i)"
        out: gate
      - in: "venezian(a|e)"
        out: shade
      - in: "tapparell(a|e)"
        out: shutter
      - in: "finestr(a|e)"
        out: window
  lock_states:
    values:
      - in: "chius(o|a|e|i)"
        out: "locked"
      - in: "apert(o|a|e|i)"
        out: "unlocked"

  shopping_list_item:
    wildcard: true

  # binary_sensor
  bs_battery_states:
    values:
      - in: "bass(o|a|e|i)"
        out: "on"
      - in: "normale"
        out: "off"

  bs_battery_charging_states:
    values:
      - in: "[in] carica"
        out: "on"
      - in: "non in carica"
        out: "off"

  bs_carbon_monoxide_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "non rilevat(o|a|e|i)"
        out: "off"

  bs_cold_states:
    values:
      - in: "freddo"
        out: "on"
      - in: "normale"
        out: "off"

  bs_connectivity_states:
    values:
      - in: "connesso"
        out: "on"
      - in: "(disconnesso|non connesso)"
        out: "off"

  bs_door_states:
    values:
      - in: "apert(o|a|e|i)"
        out: "on"
      - in: "chius(o|a|e|i)"
        out: "off"

  bs_garage_door_states:
    values:
      - in: "apert(o|a|e|i)"
        out: "on"
      - in: "chus(o|a|e|i)"
        out: "off"

  bs_gas_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "non rilevat(o|a|e|i)"
        out: "off"

  bs_heat_states:
    values:
      - in: "cald(o|a|e|i)"
        out: "on"
      - in: "normale"
        out: "off"

  bs_light_states:
    values:
      - in: "(rilevat|attiv[at]|acces)(o|a|e|i)"
        out: "on"
      - in: "no luce"
        out: "off"

  bs_lock_states:
    values:
      - in: "apert(o|a|e|i)"
        out: "on"
      - in: "chius(o|a|e|i)"
        out: "off"

  bs_moisture_states:
    values:
      - in: "umid(o|a|e|i)"
        out: "on"
      - in: "secc(o|a|e|hi)"
        out: "off"

  bs_motion_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "liber(o|a|e|i)"
        out: "off"

  bs_occupancy_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "(liber|sgombr)(o|a|e|i)"
        out: "off"

  bs_opening_states:
    values:
      - in: "apert(o|a|e|i)"
        out: "on"
      - in: "chius(o|a|e|i)"
        out: "off"

  bs_plug_states:
    values:
      - in: "(attaccat|collegat)(o|a|e|i)"
        out: "on"
      - in: "(staccat|non attaccat|scollegat|non collegat)(o|a|e|i)"
        out: "off"

  bs_power_states:
    values:
      - in: "(attaccat|collegat)(o|a|e|i)"
        out: "on"
      - in: "(staccat|non attaccat|scollegat|non collegat)(o|a|e|i)"
        out: "off"

  bs_presence_states:
    values:
      - in: "([a ] casa|present(e|i))"
        out: "on"
      - in: "(fuori casa|non present(e|i))"
        out: "off"

  bs_problem_states:
    values:
      - in: "rilevat(o|i)"
        out: "on"
      - in: "ok"
        out: "off"

  bs_running_states:
    values:
      - in: "(funziona[nte]|gira|va)"
        out: "on"
      - in: "non (funziona[nte]|gira|va)"
        out: "off"

  bs_safety_states:
    values:
      - in: "non sicuro"
        out: "on"
      - in: "sicuro"
        out: "off"

  bs_smoke_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "liber(o|a|e|i)"
        out: "off"

  bs_sound_states:
    values:
      - in: "(rilevat|attiv[at])(o|a|e|i)"
        out: "on"
      - in: "liber(o|a|e|i)"
        out: "off"

  bs_tamper_states:
    values:
      - in: "(rilevat|attiv[at]|manomess|alterat)(o|a|e|i)"
        out: "on"
      - in: "liber(o|a|e|i)"
        out: "off"

  bs_update_states:
    values:
      - in: "aggiornamento disponibile"
        out: "on"
      - in: "aggornato"
        out: "off"

  bs_vibration_states:
    values:
      - in: "(rilevat(a|a|e|i)|[in ]vibrazione)"
        out: "on"
      - in: "(liber(a|a|e|i)|non [in ]vibrazione)"
        out: "off"

  bs_window_states:
    values:
      - in: "apert(o|a|e|i)"
        out: "on"
      - in: "chius(o|a|e|i)"
        out: "closed"

expansion_rules:
  the: "(l(o|a|e) | i[l] | gli | l'| in | ne(l|llo|lla|lle|ll'|gli) | a[(l|llo|lla|lle|ll'|gli)])"
  in: "(in | ne[i |gli |l[lo |la |le |l'| ]])"
  of: "(de[l[lo |la |le |l'| ]]|i |gli |di )"
  to: "a[l[lo |la |le |l'] | gli ]"
  name: "{name}"
  area: "{area}"
  what_is: "(qual[e] è|quant(o |')è|com(e |')è|che)"
  brightness: "{brightness}[%| percento]"
  turn_on: "(accend(i|ere) | attiv(a|are))"
  turn_off: "((spegn|speng)(i|ere) | disattiv(a|are))"
  open: "(apr(i|ire) | alz(a|are))"
  close: "(chiud(i|ere) | abbass(a|are))"
  set: "(impost(a|are) | cambi(a|are) | mett(i|ere) | modific(a|are))"
  temperature: "{temperature}[°| gradi] [{temperature_unit}]"
  cover: "(tend(a|e)[ da sole]|serrand(a|e)|tapparell(a|e)|persian(a|e)|port(a|e)|saracinesc(a|he)|venezian(a|e)|cancell(o|i)|finestr(a|e)|oscurant(e|i))"
  climate: "(clima|climatizzator(e|i)|condizionator(e|i)|aria condizionata)"
  fan: "(ventol(a|e) | ventilator(e|i) | ventilazione | climatizzator(e|i) | condizionator(e|i))"
  all: "(tutt(o|e|i|a) [quant(i|e)] | ogni)"
  garage: "(serrand(a|e) | port(a|e) [basculant(e|i)|de(l|i) garage] | saracinesc(a|he))"
  light: "luc(e|i)"
  in_here: "(qu(a|i)|in questa (stanza|camera))"
  home: "(casa|appartamento)"
skip_words:
  - "grazie"
  - "per favore"
  - "per piacere"
  - "potresti"
  - "mi potresti"
  - "ci potresti"
  - "puoi"
  - "mi puoi"
  - "ci puoi"
  - "potreste"
  - "mi potreste"
  - "ci potreste"
  - "dimmi"
  - "dirmi"
  - "dicci"
  - "dire"
  - "mi dici"
  - "ci dici"
  - "mi dica"
  - "ci dica"
